# Generated by Django 3.0.8 on 2020-09-16 23:03

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import processes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200, verbose_name='Product Name')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('production_order_no', models.IntegerField(blank=True, default=0, verbose_name='Customer / Production Order No')),
                ('order_position_no', models.IntegerField(blank=True, default=0, verbose_name='Order Position No ')),
                ('reference_no', models.IntegerField(blank=True, default=0, verbose_name='Reference No')),
                ('quantity', models.IntegerField(blank=True, default=0, verbose_name='Quantity')),
                ('working_pressure', models.IntegerField(blank=True, default=0, verbose_name='Working Pressure')),
                ('assemblied_by', models.CharField(blank=True, max_length=200, verbose_name='Assemblied By')),
                ('tested_by', models.CharField(blank=True, max_length=200, verbose_name='Tested By')),
                ('order_date', models.DateTimeField(blank=True, default=datetime.date.today, verbose_name='Order Date ')),
                ('ident_no', models.IntegerField(blank=True, default=0, verbose_name='Ident No')),
                ('slug', models.SlugField(unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_8_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q5', models.CharField(blank=True, max_length=200, verbose_name='Assembler')),
                ('q6', models.CharField(blank=True, max_length=200, verbose_name='Tester')),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'CONDITIONAL ADMISSION'), (2, 'RED')], default=0, verbose_name='Result')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'REXROTH'), (1, 'YANSANAYI')], default=0, verbose_name='Ek İşlem')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'Aydın Kongel'), (1, 'Ferdi Akdemir')], default=0, verbose_name='Controller')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'Aydın Kongel'), (1, 'Ferdi Akdemir')], default=0, verbose_name='Approving Person')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process8_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Cleaning, Paint Spillage, Burr, oil in oil pan and tank surface')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Impact, Rust')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Open lines were covered with suitable covers')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Missing Material')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Hose Pressure Value and Hose Clamp')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Paint Thickness')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='WARNING Labels (Electric motor rotation direction, Battery operating pressure)')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Pressure Filter Installation Direction')),
                ('q9', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Oil Leakage (Blind plug usage)')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Documentation')),
                ('q11', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Lifting Ears')),
                ('q12', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Unit Label')),
                ('q13', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Is the Label Numerator Hit?')),
                ('q14', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Packing of materials to go next to the tank')),
                ('q15', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Descriptions')),
                ('q16', models.IntegerField(blank=True, default=0, verbose_name='Image No:')),
                ('content', models.TextField(blank=True, verbose_name='Remarks')),
                ('picture1', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 1')),
                ('picture2', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 2')),
                ('picture3', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 3')),
                ('picture4', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 4')),
                ('picture5', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 5')),
                ('picture6', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 6')),
                ('picture7', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 7')),
                ('picture8', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 8')),
                ('picture9', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 9')),
                ('picture10', models.ImageField(blank=True, null=True, upload_to=processes.models.Process8_image, verbose_name='Upload Image 10')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process8', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_7_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.CharField(blank=True, max_length=200, verbose_name='Tested By')),
                ('q2', models.CharField(blank=True, max_length=200, verbose_name='Controller')),
                ('q3', models.CharField(blank=True, max_length=200, verbose_name='Customer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process7_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q11', models.IntegerField(blank=True, default=0, verbose_name='Volume')),
                ('q22', models.IntegerField(blank=True, default=0, verbose_name='Sys. Pressur')),
                ('q33', models.IntegerField(blank=True, default=0, verbose_name='Test Press')),
                ('q44', models.IntegerField(blank=True, default=0, verbose_name='Hyd.Circuit No')),
                ('q0', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Devre Şema No/Hyd.Circuit No')),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Assemb. Control')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Elec.Mot.Return Dir. ')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Hose Control')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Fittings Control')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Return Fittings Control')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Function Test')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'None'), (1, 'Detected')], default=0, verbose_name='Oil Leakage')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'Missing Component'), (1, 'Not Missing Component/')], default=0, verbose_name='Missing Parts')),
                ('q9', models.TextField(blank=True, verbose_name='Remarks')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'DONE'), (1, 'Not Done')], default=0, verbose_name='Oil reservoir has been checked from inside after test ')),
                ('q12', models.IntegerField(blank=True, default=0, verbose_name='Ral Code For Prime Coat')),
                ('q13', models.IntegerField(blank=True, default=0, verbose_name='Ral Code For Second Coat')),
                ('q14', models.IntegerField(blank=True, default=0, verbose_name='Thickness For Prime Coat')),
                ('q15', models.IntegerField(blank=True, default=0, verbose_name='Thickness For Second Coat')),
                ('q17', models.IntegerField(blank=True, default=0, verbose_name='Pz.No:')),
                ('q18', models.IntegerField(blank=True, default=0, verbose_name='Bar:')),
                ('q16', models.TextField(blank=True, verbose_name='Remarks')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process7', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_6_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process6_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I made the block assemblies.')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I installed the cooler.')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The air filter is installed.')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='A desiccant (silica gel) is installed.')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Thermostats are installed.')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Level / temperature indicator is installed.')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Level switch is installed.')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The pressure filter was mounted by checking the oil inlet direction.')),
                ('q9', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The return filter was mounted by controlling the oil inlet direction.')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The cooler has been installed.')),
                ('q11', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The battery has been installed.')),
                ('q12', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Manometers are installed.')),
                ('q13', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The heater has been installed.')),
                ('q14', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The length of the ordered hoses has been checked.')),
                ('q15', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Connection unions of the ordered hoses have been checked.')),
                ('q16', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Safety cables of the ordered hoses have been checked.')),
                ('q17', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The production date of the ordered hoses has been accepted and it is a hose produced in the last 2 years, including the current year.')),
                ('q18', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Hose pressure values are higher than the working and test pressure of the system.')),
                ('q19', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='In the area where the hoses are mounted, there is no other assembly part that the hose will rub against as a result of the movement of the pressure.')),
                ('q20', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The assembly of all hydraulic connections (elbows, sleeves, etc.) is tightened with appropriate torques.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process6', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_5_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process5_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Before painting, I examined the Tank / Couplings / Battery - Valve stand and its mounting parts and I determined the primer burns, rusty, scratched dirty and scratched / damaged surfaces and made the necessary pre-paint preparations.')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Before painting, I masked the necessary assembly parts and painted according to the requests on the order form.')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I painted the lift ears yellow.')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='If there are protruding surfaces or sharp spots on the tank, I painted it yellow.')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='After painting I let the necessary drying time wait.')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='After painting, I cleaned inside the tank.')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I removed the masking made after painting and determined the surfaces that were not painted and required touch-up and made the necessary painting procedures.')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I measured the Paint Thickness.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process5', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_4_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process4_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Before welding, I learned about piping and welding processes, learned the types of materials to be welded and checked my WPS.')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I performed a break-off test by welding studs on a sample sheet before the tank cover.')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Before all welding operations, I purified the surfaces to be welded from oil, rust and dirt.')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I made the tank cover stud welds and checked the dimensional accuracy by mounting the cover.')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I did the grounding bolt welding.')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I performed root welding with TIG and filling passes with MAG in pipe / elbow / flange welding.')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='After the root resource job I checked for root sag. If there is sagging, I cleaned it with stone engine.')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I checked whether combustion grooves were formed in the cover passes.')),
                ('q9', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I performed start and end error checks on MAG sources.')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I also performed the above welding checks on the welding of the mounting parts (cable channel, filter console… etc.).')),
                ('q11', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I performed surface cleaning and passivation processes after stainless welding.')),
                ('q12', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I cleaned the primer on the surface before welding the lifting hooks and then I did the welding process.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process4', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_3_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process3_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='There is no piping that can cause difficulties in assembly and disassembly.')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Pump main distribution block has been piped.')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Pump pressure filter piping has been done.')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Pressure filter main distribution block piping has been done.')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The gear pump fixing plate nipple and fixing plate nipple were piped to the main distribution block.')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Piping has been made between blocks.')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Tank line cooler - return filter piping has been done.')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Circulation line piping has been made between the pump / cooler / return filter.')),
                ('q9', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Tank line - ball valve (bypass system) and return filter piping.')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Battery line piping has been made.')),
                ('q11', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The battery stand has been piped.')),
                ('q12', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Valve stand piping has been made.')),
                ('q13', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='All piping is made according to the circuit diagram.')),
                ('q14', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The pipe diameters used are suitable for the diameters and wall thicknesses specified in the circuit diagram.')),
                ('q15', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='All pipe connections (service and customer connections) are easily accessible.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process3', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_2_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q35', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The coupling is completely assembled.')),
                ('q36', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='If there is an oil pan in the coupling, it has been installed.')),
                ('q37', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The coupling has been mounted on the tank.')),
                ('q38', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Blocks have been tested.')),
                ('q39', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The tank return pipes of the blocks have been installed and their installation on the tank has been completed.')),
                ('q40', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The pressure filter is mounted by controlling the oil inlet direction and there is enough space to change the filter element.')),
                ('q41', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The return filter was mounted by checking the oil inlet direction.')),
                ('q42', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The cooler installation filter was installed by checking the oil inlet direction.')),
                ('q43', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The battery has been installed.')),
                ('q44', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Air filter / dehumidifier (silica gel) installed.')),
                ('q45', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Hose connections and dimensions have been determined and ordered.')),
                ('q46', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Manometer plate is welded and manometers are installed.')),
                ('q47', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The protection sheets of the assembly parts mounted on the tank such as transmitter and thermostat are welded and the parts are assembled.')),
                ('q48', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Terminal box plate is welded.')),
                ('q49', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The valve stand assembly is complete.')),
                ('q50', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The battery stand assembly is complete.')),
                ('q51', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Piping, which may cause difficulties in assembly and disassembly operations, were determined in advance and information was given to the design department.')),
                ('q52', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The block connection plate welds have been completed.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process2_2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='I received the product file for pre-assembly.')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The tank has been received.')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The valve stand has been received.')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The battery stand has been received.')),
                ('q5', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Other sheet metal parts required for assembly are accurate and complete.(fixing plate, manometer sheet… ..etc)')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Tank caps are correct.')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Unit blocks have been received.')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The size of the electric motor is correct in terms of kW.')),
                ('q9', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Electric motor vibration mounts are correct.')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Pumps are correct.')),
                ('q11', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Suitable for drum, electric motor and pump.')),
                ('q12', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Coupling set is suitable for electric motor and pump.')),
                ('q13', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Gear pump mounting flanges are provided.')),
                ('q14', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Pressure filter is correct.')),
                ('q15', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The return filter is correct.')),
                ('q16', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The 3-way ball valve used for return filter cleaning is correct.')),
                ('q17', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Batteries / batteries are correct.')),
                ('q18', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Battery mounting brackets and plates are correct.')),
                ('q19', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Battery safety block is correct.')),
                ('q20', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The cooler is correct in terms of mounting location.')),
                ('q21', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The compensator is correct.')),
                ('q22', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Butterfly valve is correct.')),
                ('q23', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The tank drain spherical valve is correct.')),
                ('q24', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The heater is correct. It does not hit the curtain plate or other equipment in the tank.')),
                ('q25', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The level indicators with / without switch are correct.')),
                ('q26', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The level switch is correct.')),
                ('q27', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Manometers are accurate. Panel type / Bottom outlet')),
                ('q28', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The minimes record is correct.')),
                ('q29', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Minimes hose is correct.')),
                ('q30', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Connection flanges are correct.')),
                ('q31', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='Stainless fittings and pipes are correct.')),
                ('q32', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The pipes supplied from the sub-industry are correct.')),
                ('q33', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The dehumidifier (silica gel) / air filter is correct.')),
                ('q34', models.IntegerField(blank=True, choices=[(0, 'Yes'), (1, 'No'), (2, 'Not Related')], default=0, verbose_name='The terminal box is correct.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process2', to='processes.Product')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_1_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process1_2', to='processes.Product', verbose_name='Hangi Ürün?')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Process_1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('q16', models.IntegerField(blank=True, default=0, verbose_name='Satınalma Sipariş Numarası')),
                ('q17', models.IntegerField(blank=True, default=0, verbose_name='Ident No')),
                ('q12', models.IntegerField(blank=True, default=0, verbose_name='Picture No')),
                ('q13', models.IntegerField(blank=True, choices=[(0, 'INCI MAKINA'), (1, 'SECKIN TORNA'), (2, 'MODCON'), (3, 'TEKNIK CIZGI')], default=0, verbose_name='Sub-industry')),
                ('q14', models.IntegerField(blank=True, choices=[(0, 'ST37'), (1, 'ST52'), (2, 'PASLANMAZ'), (3, 'ALUMINYUM')], default=0, verbose_name='Tank Type')),
                ('q1', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Misalignment')),
                ('q2', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Deformation')),
                ('q3', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Grinding, Putty')),
                ('q4', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Surface cleaning')),
                ('q5', models.IntegerField(blank=True, default=0, verbose_name='Lining Thickness (max 80 µ)')),
                ('q6', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Lack of Operation')),
                ('q7', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Welding Quality')),
                ('q8', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Welding seam start-end control in sleeve welds')),
                ('q9', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Cleanliness control on weld seams and inside the tank (only for stainless steel tank)')),
                ('q10', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Crack check around the tank drain nut (Only for Aluminum tanks)')),
                ('q11', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'RED'), (2, 'OUT OF SCOPE')], default=0, verbose_name='Packaging')),
                ('picture1', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 1')),
                ('picture2', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 2')),
                ('picture3', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 3')),
                ('picture4', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 4')),
                ('picture5', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 5')),
                ('picture6', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 6')),
                ('picture7', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 7')),
                ('picture8', models.ImageField(blank=True, null=True, upload_to=processes.models.Process1_image, verbose_name='Upload Image 8')),
                ('q15', models.TextField(blank=True, verbose_name='Remarks')),
                ('q111', models.IntegerField(blank=True, choices=[(0, 'OK'), (1, 'CONDITIONAL ADMISSION'), (2, 'RED')], default=0, verbose_name='Result')),
                ('q222', models.IntegerField(blank=True, choices=[(0, 'REXROTH'), (1, 'YANSANAYI')], default=0, verbose_name='Ek İşlem')),
                ('q333', models.IntegerField(blank=True, choices=[(0, 'Aydın Kongel'), (1, 'Ferdi Akdemir')], default=0, verbose_name='Controller')),
                ('q444', models.IntegerField(blank=True, choices=[(0, 'Aydın Kongel'), (1, 'Ferdi Akdemir')], default=0, verbose_name='Approving Person')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_process1', to='processes.Product', verbose_name='Product Name')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
    ]
